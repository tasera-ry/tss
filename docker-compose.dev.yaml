version: '3.9'

services:
  database:
    image: postgres:13-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: some_password
      PGUSER: postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432 # expose database to host so it can be accessed with a db tool like DBeaver

  backend:
    build:
      context: ./back
      target: dev
    restart: always
    depends_on:
      database:
        condition: service_healthy
    environment:
      - DB_USER=postgres
      - DB_PASSWORD=some_password
      - NODE_ENV=development
      - DB_HOST=database
      - DB_PORT=5432
      - SERVER_HOST=http://frontend:3000
      # email stuff
      # Use Ethereal for testing purposes: see https://ethereal.email/
      # a service, that does not actually send emails but allows testing
      # (in the production environment an actual smtp service provided by Google is used.)
      - EMAIL_HOST=smtp.ethereal.email
      - EMAIL_PORT=587
      - EMAIL_SECURE=false
      # fill these in with the email and password from Ethereal
      - EMAIL_USER=
      - EMAIL_PASSWORD=
      - SENDER_EMAIL=noreply@tasera.fi
      - SHOULD_SEND_EMAIL=true
      - SHOULD_QUEUE_EMAIL=false
    ports:
      - 8000:8000
      - 5858:5858 # node debugger
    volumes:
      - '/app/node_modules/'
      - ./back:/app
    command: >
      /bin/sh -c "npx knex migrate:latest
      && npx knex seed:run
      && nodemon --inspect=0.0.0.0:5858 --legacy-watch server.js"

  
  frontend:
    build:
      context: ./front
      target: dev
    restart: always
    depends_on:
      - backend
    ports:
      - 3000:3000
    environment:
      - ESLINT_NO_DEV_ERRORS=true
      - CHOKIDAR_USEPOLLING=true
      - PROXY_HOSTNAME=backend
      - PROXY_PORT=8000
    volumes:
      - ./front/src:/app/src
    stdin_open: true
    links:
      - backend
